<?php

/**
 * @file
 * Install, update and uninstall functions for the Varbase Media Header module.
 */

use Vardot\Entity\EntityDefinitionUpdateManager;
use Vardot\Installer\ModuleInstallerFactory;

/**
 * Implements hook_install().
 */
function varbase_media_header_install() {

  // Processor for install: in varbase_media_header.info.yml file.
  // ---------------------------------------------------------------------------.
  ModuleInstallerFactory::installList('varbase_media_header');

  // Install optional configs.
  ModuleInstallerFactory::importConfigsFromScanedDirectory('varbase_media_header', '/^core.entity_view_display.*\\.(yml)$/i');
  ModuleInstallerFactory::importConfigsFromScanedDirectory('varbase_media_header', '/^.*(settings.yml)$/i');

  // Entity updates to clear up any mismatched entity and/or field definitions
  // And Fix changes were detected in the entity type and field definitions.
  \Drupal::classResolver()
    ->getInstanceFromDefinition(EntityDefinitionUpdateManager::class)
    ->applyUpdates();

  // Add permissions.
  ModuleInstallerFactory::addPermissions('varbase_media_header');

}

/**
 * Issue #3180926: Add the ability to hide the breadcrumbs from Media Header.
 */
function varbase_media_header_update_87001() {
  // Save the settings value for the hide breadcrumbs.
  \Drupal::configFactory()->getEditable('varbase_media_header.settings')
    ->set('hide_breadcrumbs', FALSE)
    ->save();
}

/**
 * Issue #3291994: Change to conditionally.
 *
 * Attache only needed local or remote video libraries.
 */
function varbase_media_header_update_90001() {
  $entity_view_display_media_video = \Drupal::service('config.factory')->getEditable('core.entity_view_display.media.video.varbase_media_header');
  $media_video_autoplay = $entity_view_display_media_video->get('content.field_media_video_file.settings.autoplay');

  if ($media_video_autoplay === FALSE) {
    $entity_view_display_media_video->set('content.field_media_video_file.settings.autoplay', TRUE)->save(TRUE);
  }
}
