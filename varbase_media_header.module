<?php

/**
 * @file
 * Contains varbase_media_header.module.
 */

use Drupal\node\NodeInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function varbase_media_header_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  $vmh_settings = \Drupal::config('varbase_media_header.settings')->get('varbase_media_header_settings');

  $bundles = \Drupal::service('entity_type.bundle.info')->getBundleInfo('node');

  foreach ($bundles as $bundle_key => $bundle) {
    if (!empty($vmh_settings['node']) && isset($vmh_settings['node'][$bundle_key]) && $vmh_settings['node'][$bundle_key]) {

      if ($form_id == 'node_' . $bundle_key . '_edit_form'
       || $form_id == 'node_' . $bundle_key . '_form') {
        _varbase_media_header_group_form($form, $form_state, $form_id);
      }
    }
  }
}

/**
 * Varbase Media Header page form node add/edit.
 *
 * To group fields in add or edit form.
 *
 * @param mixed $form
 *   The form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The status of the form.
 * @param string $form_id
 *   The form id.
 */
function _varbase_media_header_group_form(&$form, FormStateInterface $form_state, $form_id) {

  // Have landing page extra fiels in a group in the right-hand column.
  $form['vmh_group'] = [
    '#type' => 'fieldset',
    '#title' => t('Media Header'),
    '#group' => 'advanced',
    '#attributes' => [
      'class' => ['node-form-options'],
    ],
    '#attached' => [
      'library' => ['node/drupal.node'],
    ],
    '#weight' => -10,
    '#optional' => TRUE,
    '#open' => TRUE,
  ];

  if (isset($form['field_page_header_style'])) {
    $form['field_page_header_style']['#group'] = 'vmh_group';
  }

  if (isset($form['field_media'])) {
    $form['field_media']['#group'] = 'vmh_group';
  }

}

/**
 * Implements hook_preprocess_block().
 */
function varbase_media_header_preprocess_block(&$variables) {

  $active_theme = \Drupal::config('system.theme')->get('default');
  $current_theme = \Drupal::theme()->getActiveTheme()->getName();
  if (($variables['plugin_id'] == 'page_title_block'
      || $variables['plugin_id'] == 'system_breadcrumb_block')
      && $active_theme == $current_theme) {

    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node instanceof NodeInterface) {
      if (isset($node)) {

        $vmh_settings = \Drupal::config('varbase_media_header.settings')->get('varbase_media_header_settings');
        if (!empty($vmh_settings['node'])
          && isset($vmh_settings['node'][$node->getType()])
          && $vmh_settings['node'][$node->getType()]
          && $node->hasField('field_page_header_style')
          && !$node->get('field_page_header_style')->isEmpty()
          && $node->get('field_page_header_style')->value != 'standard') {

          $vmh_hide_breadcrumbs = \Drupal::config('varbase_media_header.settings')->get('hide_breadcrumbs');

          if ($variables['plugin_id'] == 'system_breadcrumb_block'
            && isset($vmh_hide_breadcrumbs)
            && $vmh_hide_breadcrumbs == FALSE) {
            $variables['content'] = '';
          }
          elseif ($variables['plugin_id'] == 'page_title_block') {
            $variables['content'] = '';
          }
        }
        $variables['#cache']['contexts'][] = 'url';
      }
    }
  }

}

/**
 * Implements hook_theme().
 */
function varbase_media_header_theme($existing, $type, $theme, $path) {

  return [
    'varbase_media_header_block' => [
      'variables' => [
        'title' => 'Varbase Media Header',
        'description' => NULL,
        'vmh_page_title' => NULL,
        'vmh_page_breadcrumbs' => NULL,
        'vmh_background_media' => NULL,
      ],
    ],
    'media_oembed_iframe__remote_video__varbase_media_header' => [
      'template' => 'media-oembed-iframe--remote-video--varbase-media-header',
      'variables' => [
        'provider' => NULL,
        'media' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function varbase_media_header_preprocess_media_oembed_iframe__remote_video__varbase_media_header(&$variables) {
  // Suggestions go here!
  $module_handler = \Drupal::service('module_handler');
  $query = \Drupal::request()->query;
  $variables['type'] = $query->get('type');
  $variables['provider'] = $query->get('provider');
  $variables['view_mode'] = $query->get('view_mode');
  $variables['base_path'] = base_path();
  $variables['varbase_media_header_path'] = $module_handler->getModule('varbase_media_header')->getPath();

}
